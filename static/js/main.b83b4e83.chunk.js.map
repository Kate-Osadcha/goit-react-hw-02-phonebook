{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactItem/ContactItem.module.scss","App.module.scss","components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/ContactList/ContactList.module.scss","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","defaultProps","ContactForm","state","name","number","hanldeChange","event","currentTarget","value","setState","hanldeSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","resetForm","form","this","label","input","type","onChange","pattern","title","required","button__wrapper","button","Component","Filter","ContactItem","onDeleteContact","item","href","onClick","ContactList","contacts","list","map","App","filter","addContact","newContact","find","alert","changeFilter","filterContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","filteredResults","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83b4e83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Wpa6\",\"label\":\"ContactForm_label__UybND\",\"input\":\"ContactForm_input__3l6ME\",\"button__wrapper\":\"ContactForm_button__wrapper__1iEEd\",\"button\":\"ContactForm_button__3CYRw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__TT_w5\",\"name\":\"ContactItem_name__12BX2\",\"number\":\"ContactItem_number__1uTc3\",\"button\":\"ContactItem_button__23lIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1TXc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2ZoDN\",\"input\":\"Filter_input__2DH4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nEOA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1vGnu\"};","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  // PropTypes как статическое свойство\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  // Метод записывающий значение инпутов в state\n  hanldeChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // Метод, который формирует из state контакт\n  hanldeSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.props.onSubmit(contact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({\n      id: '',\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.hanldeSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name} //добавляем значение в state\n            onChange={this.hanldeChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number} //добавляем значение в state\n            onChange={this.hanldeChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <div className={s.button__wrapper}>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n    </label>\n  );\n};\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import s from './ContactItem.module.scss';\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <li className={s.item}>\n      <span className={s.name}>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={s.number}>\n        {contact.number}\n      </a>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => onDeleteContact(contact.id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\n\nimport s from './ContactList.module.scss';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(contact => (\n        <ContactItem\n          contact={contact}\n          onDeleteContact={onDeleteContact}\n          key={contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport s from './App.module.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  // Добавляет контакт\n  addContact = newContact => {\n    // Проверка на дубликат\n    const duplicateName = this.state.contacts.find(\n      contact => contact.name === newContact.name,\n    );\n    if (duplicateName) {\n      alert(`${newContact.name} is already on contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  // Фильтрует и возвращает результат фильтра\n  filterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  // Удаляет контакт\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredResults = this.filterContacts();\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredResults}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './App.module.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}